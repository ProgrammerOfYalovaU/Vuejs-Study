{"remainingRequest":"C:\\Users\\FatihCNZ\\Desktop\\VueHomework\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\FatihCNZ\\Desktop\\VueHomework\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\FatihCNZ\\Desktop\\VueHomework\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\FatihCNZ\\Desktop\\VueHomework\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\FatihCNZ\\Desktop\\VueHomework\\src\\components\\Product.vue?vue&type=template&id=3cf4ef6f&scoped=true&","dependencies":[{"path":"C:\\Users\\FatihCNZ\\Desktop\\VueHomework\\src\\components\\Product.vue","mtime":1586006366057},{"path":"C:\\Users\\FatihCNZ\\Desktop\\VueHomework\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\FatihCNZ\\Desktop\\VueHomework\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\FatihCNZ\\Desktop\\VueHomework\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\FatihCNZ\\Desktop\\VueHomework\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\FatihCNZ\\Desktop\\VueHomework\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}